#!/usr/bin/env bash

# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
#set -x
PATH=/sbin:${PATH}
export PATH

# config
OPENRESTY_VERSION="1.7.7.1"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
COMPILE_BUILDPACK_DIR=$(cd $(dirname $0) && cd .. && pwd)

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function package_download() {
  url="$1"
  location="$2"

  mkdir -p $location
  curl $url --location -s -o - | tar xzf - -C $location
}

# s3 packages
FOREGO_URL="https://godist.herokuapp.com/projects/ddollar/forego/releases/current/linux-amd64/forego"
#OPENRESTY_URL="http://ci-labs-buildpack-downloads.s3.amazonaws.com/openresty/openresty-$OPENRESTY_VERSION.tar.gz"
OPENRESTY_URL="http://openresty.org/download/ngx_openresty-$OPENRESTY_VERSION.tar.gz"
#OPENRESTY_URL="http://sj1010005188044.corp.adobe.com/files/openresty-1.7.7.1.tgz"


# vendor directories
VENDORED_OPENRESTY="${BUILD_DIR}/vendor/openresty"
SRC="${BUILD_DIR}/src"
VENDORED_FOREGO="${BUILD_DIR}/vendor/bin/forego"
#VENDORED_GEMS="${BUILD_DIR}/vendor/gems"

# CF Common
BUILDPACK_PATH=$COMPILE_BUILDPACK_DIR
export BUILDPACK_PATH
source $BUILDPACK_PATH/compile-extensions/lib/common
# END CF Common

echo "-----> Describing compile environment"
$COMPILE_BUILDPACK_DIR/bin/describe_compile_env $1 $2 | indent

echo "-----> Download and configure packages into app/vendor/..."
mkdir -p ${BUILD_DIR}/vendor/bin
mkdir -p $BUILD_DIR/.profile.d
echo "export CAN_SET_IN_PROFILED=true" > $BUILD_DIR/.profile.d/test_setting.sh

echo "Installing ForeGo (latest from $FOREGO_URL)" | indent
curl $FOREGO_URL -s -o $VENDORED_FOREGO
chmod +x $VENDORED_FOREGO
echo "export PATH=\"\$HOME/vendor/bin:\$PATH\"" > $BUILD_DIR/.profile.d/forego.sh

echo "Installing OpenResty (Nginx app server) $OPENRESTY_VERSION" | indent

mkdir -p $SRC || exit 1
pushd .

cd $SRC
wget -q $OPENRESTY_URL
wget -q http://softlayer-dal.dl.sourceforge.net/project/pcre/pcre/8.36/pcre-8.36.tar.gz
ls -la

echo "---> Building PCRE" | indent
tar xzf pcre-8.36.tar.gz
cd pcre-8.36
./configure
echo "---> making PCRE" | indent
make
cd ..

echo "---> Building Openresty" | indent
tar xzf ngx_openresty-$OPENRESTY_VERSION.tar.gz
cd ngx_openresty-$OPENRESTY_VERSION
./configure --prefix=/app/vendor/openresty --with-luajit --with-pcre=../pcre-8.36
echo "---> making Openresty" | indent
make
echo "---> installing Openresty" | indent
env
make install DESTDIR=/tmp/staged
cd ..

popd


echo "export PATH=\"\$HOME/vendor/openresty/nginx/sbin:\$PATH\"" > $BUILD_DIR/.profile.d/openresty_env.sh
echo "export LD_LIBRARY_PATH=\"\$HOME/vendor/openresty/luajit/lib:\$LD_LIBRARY_PATH\"" >> $BUILD_DIR/.profile.d/openresty_env.sh
echo "export LUAJIT_LIB=\"\$HOME/vendor/openresty/luajit/lib\"" >> $BUILD_DIR/.profile.d/openresty_env.sh
echo "export LUAJIT_INC=\"\$HOME/vendor/openresty/luajit/include/luajit-2.0\"" >> $BUILD_DIR/.profile.d/openresty_env.sh

echo "Installing buildpack-runner" | indent
mkdir -p ${BUILD_DIR}/buildpack-runner | indent
cp -R $COMPILE_BUILDPACK_DIR/src/buildpack-runner/* ${BUILD_DIR}/buildpack-runner

echo "-----> Creating startup Procfile"
cp $COMPILE_BUILDPACK_DIR/Procfile ${BUILD_DIR}


echo "---> Configuring Nginx" | indent
ls -la $COMPILE_BUILDPACK_DIR

#mkdir -p ${BUILD_DIR}/lua
#cp ${BUILD_DIR}/config/*lua ${BUILD_DIR}/lua
#cp ${BUILD_DIR}/config/adobe_utils.lua ${VENDORED_OPENRESTY}/lualib


echo "---> Done!" | indent




